# Generated by Django 3.1.1 on 2020-09-04 12:49

import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('phone_no', models.CharField(db_index=True, error_messages={'unique': 'A user with that phone number already exists.'}, help_text='Required.', max_length=20, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^0[0-9]{9}\\Z'), code='invalid', message='Enter a valid phone number (it must start with 0 and be 10 characters long).')], verbose_name='phone number')),
                ('user_type', models.IntegerField(choices=[(1, 'Patient'), (2, 'Doctor'), (3, 'Secretary'), (4, 'Admin')], default=1, help_text='Required.', verbose_name='user type')),
                ('first_name', models.CharField(help_text='Required.', max_length=150, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='first name')),
                ('last_name', models.CharField(help_text='Required.', max_length=150, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='last name')),
                ('date_of_birth', models.DateField(help_text='Required.', verbose_name='date of birth')),
                ('county', models.IntegerField(choices=[(1, 'Alba\t'), (2, 'Arad\t'), (3, 'Argeș'), (4, 'Bacău'), (5, 'Bihor'), (6, 'Bistrița-Năsăud'), (7, 'Botoșani'), (8, 'Brașov'), (9, 'Brăila'), (10, 'București'), (11, 'Buzău'), (12, 'Caraș-Severin'), (13, 'Călărași'), (14, 'Cluj'), (15, 'Constanța'), (16, 'Covasna'), (17, 'Dâmbovița'), (18, 'Dolj'), (19, 'Galați'), (20, 'Giurgiu'), (21, 'Gorj'), (22, 'Harghita'), (23, 'Hunedoara'), (24, 'Ialomița'), (25, 'Iași'), (26, 'Ilfov'), (27, 'Maramureș\t'), (28, 'Mehedinți'), (29, 'Mureș'), (30, 'Neamț'), (31, 'Olt'), (32, 'Prahova'), (33, 'Satu Mare'), (34, 'Sălaj\t'), (35, 'Sibiu\t'), (36, 'Suceava'), (37, 'Teleorman'), (38, 'Timiș'), (39, 'Tulcea'), (40, 'Vaslui'), (41, 'Vâlcea'), (42, 'Prahova')], help_text='Required.', verbose_name='county')),
                ('locality', models.CharField(help_text='Required.', max_length=150, verbose_name='locality')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active.             Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
